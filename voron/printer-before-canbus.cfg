# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

# Examples https://github.com/swordfish45/klipper-config/tree/master/klipper_config
# https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/040d31c6daaed23c2a1a353545e7ee442a232f32/articles/useful_macros.md

[include mainsail.cfg]
[include prime_nozzle.cfg]
[include euclid.cfg]
[include autoz.cfg]
[include filament.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0A001D000650534E4E313120-if00
restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[printer]
kinematics: corexy
#max_accel: 10000            # for input shaper calibration
#max_accel_to_decel: 10000   # for input shaper calibration
max_velocity: 350           # was 300
max_accel: 3000             #Max 4000
max_z_accel: 350
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
square_corner_velocity: 5.0 # max 10.0, 5.0 for input shaper calibration

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 352
position_max: 352

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 357
position_max: 357

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 350mm build
position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
# rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 22.05399467434905 # was 22.736076983865
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
# sensor_type: ATC Semitec 104GT-2
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.03    ##  Try to keep pressure_advance below 1.0
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 150 ; max filament length to extrude manually

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: PG15  ## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.

# x_offset: 0    # induction probe
# y_offset: 25.0 # induction probe
# z_offset: 0    # induction probe
# speed: 10.0    # induction probe
x_offset: 2      # Euclid probe offset from nozzle in X direction
y_offset: 23.61  # Euclid probe offset from nozzle in Y direction
z_offset: 9.5    # Euclid probe
speed: 5.0       # Euclid probe trigger point distance below nozzle
lift_speed: 10   # Euclid probe lift speed
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006  # 0.0075 Euclid probe
samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.3

##  Exhaust fan - FAN3
[heater_fan exhaust_fan]
pin: PD13
max_power: 1.0
#shutdown_speed: 0.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 50
fan_speed: 0.3

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PB10
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 233, 357  # 231
speed:100
z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 500
# horizontal_move_z: 10 # inductive probe
horizontal_move_z: 12 # Euclid probe
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    #SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    #SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    #SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
    RESETRGB

[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}

    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=3

[gcode_macro RESETRGB]
gcode:
    SET_LED LED=btt_mini12864 RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[bed_mesh]
speed: 300
# horizontal_move_z: 10 # inductive probe
horizontal_move_z: 12 # Euclid probe

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
relative_reference_index: 12 # 3x3 mesh = 4, 5x5 mesh = 12, 7x7 mesh = 24

#####################################################################
#   Thermals
#####################################################################

[temperature_sensor raspberry_pi]
## Pi Temps
sensor_type: temperature_host
max_temp: 100

[temperature_sensor octopus]
## Octopus Temps
sensor_type: temperature_mcu
max_temp: 100

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF6
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor bed_corner]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 120
gcode_id: R

#####################################################################
#   Macros
#####################################################################

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro M600]
#default_parameter_X: 30  ;purge bucket location
#default_parameter_Y: 307 ;purge bucket location
#default_parameter_Z: 2.5 ;purge bucket location
gcode:
    {% set X = params.X|default(30)|int %}
    {% set Y = params.X|default(307)|int %}
    {% set Z = params.X|default(2.5)|int %}
    M400
    SAVE_GCODE_STATE NAME=M600
    PAUSE
    G91
    G1 Z20 F900 ;Raise Z away from print
    G90
    G1 X{X} Y{Y} F18000 ;Move to purge bucket
    SAVE_GCODE_STATE NAME=FIRSTMOVE
    G1 Z{Z} F18000 ;Move to purge bucket
    G91
    G1 E-120 F1000 ;Unload filament
    RESTORE_GCODE_STATE NAME=M600
    LCDRGB R=0 G=1 B=0  ; Turn LCD green

[gcode_macro LOAD]
gcode:
    SAVE_GCODE_STATE NAME=LOAD
    G91
    G1 E82 F900 ;Load filament
    CLEAN_NOZZLE
    PRIME_NOZZLE
    RESTORE_GCODE_STATE NAME=LOAD
    SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro UNPAUSE]  ; run after changing out the filament on M600
gcode:
    RESTORE_GCODE_STATE NAME=FIRSTMOVE MOVE=1
    FILAMENT_SENSOR_ENABLE
    RESUME

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    Stop_Beeping
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E50 F{speed} # fast load
    G1 E15 F{max_velocity} # extrude
    M300
    M300
    M117 # clear filament runout message, if any
    RESETRGB
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set length = params.LENGTH|default(75) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    Stop_Beeping
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E-{length} F{speed}
    # G1 E-50 F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state

[pause_resume]

[gcode_macro M0]
gcode:
    PAUSE

[delayed_gcode beeping]
gcode:
    M300
    UPDATE_DELAYED_GCODE ID=beeping DURATION=5

[gcode_macro Stop_Beeping]
gcode:
    UPDATE_DELAYED_GCODE ID=beeping DURATION=0

[gcode_macro Start_Beeping]
gcode:
    UPDATE_DELAYED_GCODE ID=beeping DURATION=1

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#gcode:
#    # Parameters
#    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
#    
#    {% if printer['pause_resume'].is_paused|int == 0 %}     
#        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
#        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
#                                
#        FILAMENT_SENSOR_DISABLE       
#        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
#        BASE_PAUSE                                                                           ; pause print
#        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
#            G91                                                                              ; relative positioning
#            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
#        {% else %}
#            { action_respond_info("Pause z-hop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
#            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
#        {% endif %}
#        G90                                                                                  ; absolute positioning
#        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
#        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
#        M104 S0                                                                              ; turn off hotend
#        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
#    {% endif %}

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    CG28 # Home
    CLEAN_NOZZLE
    G90
    G0 Y350 F9000 # Home again ASAP
    G28
    M401 # Pick up Euclid probe
    QUAD_GANTRY_LEVEL_ORIGINAL
    BED_MESH_CALIBRATE_ORIGINAL    ; or BED_MESH_PROFILE LOAD="default"
    M402 # Dock Euclid probe
    #CLEAN_NOZZLE
    #--------------------------------------------------------------------
    ##  Uncomment for 350mm build
    # G0 X175 Y175 Z30 F3600  ; GO_TO_CENTER
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro GO_TO_CENTER]
gcode:
    G90                            ; absolute positioning
    G0 X175 Y175 Z30 F3600

[gcode_macro GO_TO_FRONT]
gcode:
    G90                            ; absolute positioning
    G0 X175 Y5 Z30 F3600

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
        {% set F = 1 %}
        {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
        {% set F = 0 %}
    {% else %}
        {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=beeper VALUE={L} CYCLE_TIME={F} ; Play tone
    G4 P{P} ; tone duration
    SET_PIN PIN=beeper VALUE=0

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

    M190 S{bedtemp}                ; set, wait for bed temp
    M109 S{hotendtemp}             ; set, wait for hotend temp

    G32                            ; home all axes, level gantry, calibrate bed mesh
    FILAMENT_SENSOR_ENABLE
    PRIME_NOZZLE                   ; purge nozzle
    M300 # beep
    PAUSE

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    FILAMENT_SENSOR_DISABLE
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    PRINT_END
#    BASE_CANCEL_PRINT

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 201 # 181
variable_start_y: 357
variable_start_z: 0.5
variable_wipe_dist: -90 # -50
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 15

gcode:
    CG28
# {% if "xyz" not in printer.toolhead.homed_axes %}
#   G28
# {% endif %}
 
    G90  ; absolute positioning
    ## Move nozzle to start position
    G1 X{start_x} Y{start_y} F9000
    G1 Z{start_z} F1500

    ## Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
        G1 X{start_x + wipe_dist} F{wipe_spd * 60}
        G1 X{start_x} F{wipe_spd * 60}
    {% endfor %}

    G1 Z{raise_distance} # Raise nozzle

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.088
#*# pid_ki = 1.124
#*# pid_kd = 305.975
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.107
#*# pid_ki = 2.074
#*# pid_kd = 116.650
#*#
#*# [stepper_z]
#*# position_endstop = 0.993
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.048750, 0.008750, 0.023750, 0.018750, -0.041250
#*# 	  -0.046250, -0.003750, 0.025000, -0.008750, -0.080000
#*# 	  -0.040000, -0.011250, 0.000000, -0.021250, -0.100000
#*# 	  -0.046250, -0.007500, 0.021250, -0.055000, -0.088750
#*# 	  -0.051250, 0.023750, -0.000000, 0.005000, -0.067500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 58.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 40.4
